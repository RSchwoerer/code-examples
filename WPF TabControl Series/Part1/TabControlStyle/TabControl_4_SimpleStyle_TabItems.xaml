<Window x:Class="TabControlStyle.TabControl_4_SimpleStyle_TabItems"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Styling the TabControl: Part 1" 
        Height="500" 
        Width="800">
   <Window.Resources>
      <!-- 
         This color will be used to draw a border around the TabControl, on 
         the bottom of the TabItemPanel and on the bottom of unselected TabItems.
      -->
      <Color x:Key="BorderColor_Base">#888</Color>

      <!-- 
         This color will be used to draw the (outer) background of TabPages and
         the selected TabItem.
      -->
      <Color x:Key="TabControl_BackgroundColor_Base">#EEF7FF</Color>

      <!-- Brushes used for styling the TabControl -->
      <SolidColorBrush x:Key="TabControl_BackgroundBrush_Base" 
                       Color="{StaticResource TabControl_BackgroundColor_Base}"/>

      <!-- Brushes for drawing the outer and inner borders on TabPages -->
      <SolidColorBrush x:Key="TabPage_InnerBorderBrushDark" 
                       Color="#FF8DB2E3"/>
      <LinearGradientBrush x:Key="TabPage_InnerBorderBrushBright" 
                           StartPoint="0,0" EndPoint="1,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="Transparent"/>
            <GradientStop Offset="1" Color="#FFC0F9FF"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>

      <!-- 
         We only want to render a line between the TabControl's TabPage-area and
         the TabItemsPanel where there is no TabItem/TabStrip. However, we cannot
         simply set the TabItemPanel's Background-property as this would affect
         the area as a whole.
         The trick here is to define a gradient that only renders a 1px line at
         the bottom. Since TabItems are rendered above the background, this line
         will only be visible in the area that doesn't contain a TabItem.
         We'll achieve this effect by using a gradient that finishes with the
         border-color, but only for the last .01%.
      -->
      <LinearGradientBrush x:Key="TabItemPanel_BackgroundBrush" 
                           StartPoint="0,0" EndPoint="0,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="Transparent"/>
            <GradientStop Offset="0.99" 
               Color="{StaticResource BorderColor_Base}"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>

      <!-- Brushes used for styling TabItems (Background) -->
      <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Disabled" 
                           StartPoint="0,0" EndPoint="0,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Color="#EEE" Offset="0"/>
            <GradientStop Color="#BBB" Offset="0.98"/>
            <!-- 
               This is the same trick as with the TabItemPanel_BackgroundBrush (see there).
            -->
            <GradientStop Color="{StaticResource BorderColor_Base}" 
                          Offset="0.99"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Selected" 
                           StartPoint="0,0" EndPoint="0,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFC14A" Offset="0.1" />
            <GradientStop Color="{StaticResource TabControl_BackgroundColor_Base}" 
                          Offset="0.15"/>
            <GradientStop Color="#C5DBF6" Offset="0.8"/>
            <GradientStop Color="{StaticResource TabControl_BackgroundColor_Base}" 
                          Offset="1.0"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Unselected" 
                           StartPoint="0,0" EndPoint="0,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E8F2FF" Offset="0.0"/>
            <GradientStop Color="#DFE9F6" Offset="0.3"/>
            <GradientStop Color="#C7D8EE" Offset="0.7"/>
            <GradientStop Color="#B9CADE" Offset="0.98"/>
            <!-- See the TabItemPanel_BackgroundBrush comment. -->
            <GradientStop Color="{StaticResource BorderColor_Base}" 
                          Offset="0.99"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="TabItem_HoverBackgroundBrush" 
                           EndPoint="0.5,1" StartPoint="0.5,0">
         <GradientStop Color="#FFFFD5A0" Offset="0.3" />
         <GradientStop Color="#FFFFA335" Offset="0.51" />
         <GradientStop Color="#FFFFC14A" Offset="0.98" />
      </LinearGradientBrush>

      <!-- Brushes used for styling TabItems (Foreground/Text) -->
      <SolidColorBrush x:Key="TabItem_TextBrush_Unselected" Color="#4971A3" />
      <SolidColorBrush x:Key="TabItem_TextBrush_Disabled" Color="#888" />
      <SolidColorBrush x:Key="TabItem_TextBrush_Hover" Color="Indigo" />
      <SolidColorBrush x:Key="TabItem_TextBrush_Selected" Color="DarkBlue" />

      <!-- Brushes used for styling TabItems (Borders) -->
      <!-- 
         For all borders around the TabItems, we'll have to use either the 
         identical color OR (what's being done here) we'll have to assure the
         bottom of the border will always result in the color that is being
         used for drawing the line between the TabControl and the TabItemPanel.
      
         If we do use a different (solid) color here, the bottom line will not
         be rendered as desired which I presume is a matter of precedence in the
         way borders are being drawn (anti-clockwise, starting with bottom and
         finishing with left, hence the effect of the left and right edges of 
         the bottom line being drawn with the left and right border respectively).
         If you want to try it out, exchange the LinearGradientBrush with the
         SolidColorBrush that has been commented out and run the app.
         You'll probably have to zoom in to see the effect. 
      -->
      <!--<SolidColorBrush x:Key="TabItem_DisabledBorderBrush" Color="#CCC" />-->
      <LinearGradientBrush x:Key="TabItem_DisabledBorderBrush" 
                           StartPoint="0,0" EndPoint="0,1">
         <GradientStop Color="#CCC" Offset="0"/>
         <GradientStop Color="{StaticResource BorderColor_Base}" 
                       Offset="0.8"/>
      </LinearGradientBrush>
      <SolidColorBrush x:Key="TabItem_BorderBrush_Selected" 
                       Color="{StaticResource BorderColor_Base}" />
      <!-- See the comment regarding the TabItem_DisabledBorderBrush above. -->
      <LinearGradientBrush x:Key="TabItem_Border_Unselected" 
                           StartPoint="0,0" EndPoint="0,1">
         <GradientStop Color="#AAA" Offset="0"/>
         <GradientStop Color="{StaticResource BorderColor_Base}" 
                       Offset="0.8"/>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="TabItem_HoverBorderBrush" StartPoint="0,0" 
                           EndPoint="0,1">
         <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="DarkOrange"/>
            <!-- See the TabItemPanel_BackgroundBrush comment. -->
            <GradientStop Offset="0.99" 
                          Color="{StaticResource BorderColor_Base}"/>
         </LinearGradientBrush.GradientStops>
      </LinearGradientBrush>

      <!-- 
         Margins for TabItems - these will be set in the respective triggers.
      -->
      <Thickness x:Key="TabItemMargin_Base">0,8,-4,0</Thickness>
      <Thickness x:Key="TabItemMargin_Selected">-4,0,-4,0</Thickness>
      <Thickness x:Key="TabItemMargin_Hover">0,4,-4,0</Thickness>
      <Thickness x:Key="TabItemPanel_Padding">4,0,0,0</Thickness>

      <!-- The TabControl's Style. -->
      <Style TargetType="{x:Type TabControl}">
         <Setter Property="SnapsToDevicePixels" Value="true"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="TabControl">
                  <Grid>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                     </Grid.RowDefinitions>

                     <!-- 
                        The Border around each TabItem will allow us to draw the line
                        between the TabItemPanel and the TabControl (resp. the 
                        TabPage-container) when a TabItem is NOT selected, which 
                        replaces the bottom line of the TabItemPanel's border. 
                        Thus, we'll avoid drawing the bottom line for the selected
                        TabItem. Also, since the TabItem, when selected, applies a left
                        Margin of 4px, we need to add these here as Padding.
                     -->
                     <Border Background="{StaticResource TabItemPanel_BackgroundBrush}" 
                             Padding="{StaticResource TabItemPanel_Padding}">
                        <!-- This is the area in which TabItems (the strips) will be drawn. -->
                        <TabPanel IsItemsHost="True"/>
                     </Border>

                     <!-- 
                        This is the outer border of the TabControl itself, actually meaning
                        the Panel that will host a TabItem's content.
                        The top-border here will not be drawn as, otherwise, the TabItemPanel
                        would always show a thin line for the selected Tab (which we want 
                        to avoid).
                     -->
                     <Border BorderThickness="1,0,1,1" 
                             Grid.Row="1" 
                             BorderBrush="{StaticResource TabItem_BorderBrush_Selected}" 
                             Background="{StaticResource TabControl_BackgroundBrush_Base}">
                        <!-- This is the first/outer Border drawn on the TabPage -->
                        <Border BorderThickness="1" 
                                BorderBrush="{StaticResource TabPage_InnerBorderBrushDark}" 
                                CornerRadius="3" 
                                Margin="8">
                           <!-- 
                              This is the second/inner Border drawn on the TabPage. 
                              This Border is drawn with a horizontal Gradient that is transparent
                              on the left which produces the fading effect.
                           -->
                           <Border BorderThickness="1" 
                                   BorderBrush="{StaticResource TabPage_InnerBorderBrushBright}" 
                                   CornerRadius="2" 
                                   Margin="0" 
                                   Padding="2,2,3,3"
                                   >
                              <!-- 
                                 This is where the Content of the selected TabPage 
                                 will be rendered. 
                              -->
                              <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                           </Border>
                        </Border>
                     </Border>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <!-- The Style for TabItems (strips). -->
      <Style TargetType="{x:Type TabItem}">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type TabItem}">
                  <!-- The Grid helps defining the general height of TabItems. -->
                  <Grid Height="35" VerticalAlignment="Bottom">
                     <!-- 
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage.

                     -->
                     <Border Name="Border"
                             Background="{StaticResource TabItem_BackgroundBrush_Unselected}"
                             BorderBrush="{StaticResource TabItem_BorderBrush_Selected}" 
                             Margin="{StaticResource TabItemMargin_Selected}" 
                             BorderThickness="2,1,1,0" 
                             CornerRadius="3,3,0,0" 
                             >
                        <!-- This is where the Content of the TabItem will be rendered. -->
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="7,2,12,2"
                                          RecognizesAccessKey="True"/>
                     </Border>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
   </Window.Resources>

   <DockPanel LastChildFill="True">
      <Grid DockPanel.Dock="Bottom">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
         </Grid.ColumnDefinitions>
         <TextBlock Text="Zoom:"
                    VerticalAlignment="Center"
                    Margin="5"/>
         <!-- Allows to zoom the TabControl (see the ScaleTransform defined on the TC) -->
         <Slider x:Name="uiScaleSlider" 
                 Grid.Column="1"
                 ToolTip="Drag the slider to change the zoom-level ..."
                 SmallChange="0.1"
                 LargeChange="1"
                 Minimum="1" 
                 Maximum="10"
                 Value="2" 
                 Margin="5"/>
      </Grid>
      <TabControl x:Name="tc" Margin="5" SelectedIndex="0">
         <TabControl.LayoutTransform>
            <!-- Allows to zoom the control's content using the slider -->
            <ScaleTransform CenterX="0" 
                         CenterY="0"
                         ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}"
                         ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"/>
         </TabControl.LayoutTransform>
         <TabItem Header="Tab 1">
            <Canvas Background="AliceBlue"/>
         </TabItem>
         <TabItem Header="Tab 2">
            <Canvas Background="Lavender"/>
         </TabItem>
         <TabItem Header="Tab 3" IsEnabled="False"
                  ToolTip="I'm disabled.">
            <Canvas Background="PaleGreen"/>
         </TabItem>
         <TabItem Header="Tab 4">
            <Canvas Background="Cornsilk"/>
         </TabItem>
         <TabItem Header="Tab 5" x:Name="ti5">
            <Canvas Background="WhiteSmoke"/>
         </TabItem>
      </TabControl>
   </DockPanel>
</Window>
